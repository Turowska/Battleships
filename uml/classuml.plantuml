@startuml

Player o-- Ship
Board o-- Field
Player o-- Board
Game o-- Player
Ship o-- Field

class Ship {
  -body_ : vector<int>
  -is_afloat_ : bool

  +Ship(vector<int> &fields)
  +int getSize()
  +bool getIsAfloat()
  +void sunk()
  +bool isInField(int number)
}

class Field {
  -is_occupied_ : bool
  -is_hit_ : bool

  +Field()
  +void setIsOccupied(bool is_occupied)
  +bool getIsOccupied()
  +bool getIsHit()
  +bool shotField()
}

class Game {
  -players_ : pair<Player, Player>
  -round_ : bool

  +Game(array<bool, 100> firstPlayersBoard, array<bool, 100> secondPlayersBoard)
  +void nextRound()
  +bool shot(int number)
  +bool isSunk(int number)
  +bool isEnd()
}

class Board {
  -fields_: array<Field, 100>

  +Board(array<bool, 100> fields)
  +bool getIsOccupied(int number)
  +bool getIsHit(int number)
  +bool shot(int number)
}

class Player {
  -board_: Board
  -players_ships_ : vector<Ship>

  -void sunk(int number)

  +Player(array<bool, 100> fields)
  +bool shot(int number)
  +bool getIsSunk(int number)
  +bool endGame()
}

@enduml
